{"version":3,"sources":["components/Table.js","components/Form.js","components/ApiCallTest.js","App.js","index.js"],"names":["TableHeader","TableBody","props","rows","dudes","map","row","index","name","job","onClick","removeDude","Table","Form","initialState","state","handleChange","event","target","value","setState","submitForm","addDude","this","htmlFor","type","id","onChange","Component","ApiCallTest","data","fetch","then","result","json","entry","App","filter","dude","i","newDude","className","React","ReactDOM","render","document","getElementById"],"mappings":"uNAGMA,EAAc,WACjB,OACG,gCACG,+BACG,sCACA,2CAMNC,EAAY,SAACC,GAChB,IAAMC,EAAOD,EAAME,MAAMC,KAAI,SAACC,EAAKC,GAChC,OACG,+BACG,6BAAKD,EAAIE,OACT,6BAAKF,EAAIG,MACT,6BACG,wBAAQC,QAAS,kBAAMR,EAAMS,WAAWJ,IAAxC,wBAJGA,MAUf,OAAO,gCAAQJ,KAgBHS,EAVD,SAACV,GAAW,IACfE,EAAsBF,EAAtBE,MAAOO,EAAeT,EAAfS,WACf,OACG,kCACG,cAAC,EAAD,IACA,cAAC,EAAD,CAAWP,MAAOA,EAAOO,WAAYA,Q,OCe/BE,E,4MAlDZC,aAAe,CACZN,KAAM,GACNC,IAAK,I,EAGRM,MAAQ,EAAKD,a,EAEbE,aAAe,SAACC,GAAW,IAAD,EACCA,EAAMC,OAAtBV,EADe,EACfA,KAAMW,EADS,EACTA,MAEd,EAAKC,SAAL,eACIZ,EAAOW,K,EAIdE,WAAa,WACV,EAAKnB,MAAMoB,QAAQ,EAAKP,OACxB,EAAKK,SAAS,EAAKN,e,uDAGZ,IAAD,EACgBS,KAAKR,MAAnBP,EADF,EACEA,KAAMC,EADR,EACQA,IAEd,OACG,iCACG,uBAAOe,QAAQ,OAAf,kBACA,uBACGC,KAAK,OACLjB,KAAK,OACLkB,GAAG,OACHP,MAAOX,EACPmB,SAAUJ,KAAKP,eAClB,uBAAOQ,QAAQ,MAAf,iBACA,uBACGC,KAAK,OACLjB,KAAK,MACLkB,GAAG,MACHP,MAAOV,EACPkB,SAAUJ,KAAKP,eAElB,uBAAOS,KAAK,SAASN,MAAM,SAAST,QAASa,KAAKF,oB,GAzC3CO,aCmCJC,E,4MAjCZd,MAAQ,CACLe,KAAM,I,kEAKY,IAAD,OAIjBC,MAFG,kGAGCC,MAAK,SAACC,GAAD,OAAYA,EAAOC,UACxBF,MAAK,SAACC,GACJ,EAAKb,SAAS,CACXU,KAAMG,S,+BAKR,IAGDA,EAFWV,KAAKR,MAAde,KAEYzB,KAAI,SAAC8B,EAAO5B,GAC7B,OAAO,6BAAiB4B,GAAR5B,MAInB,OAAO,6BAAK0B,Q,GA5BQL,aCkDXQ,E,4MA9CZrB,MAAQ,CACLX,MAAO,CACJ,CACGI,KAAM,UACNC,IAAK,WAER,CACGD,KAAM,MACNC,IAAK,WAER,CACGD,KAAM,MACNC,IAAK,mBAER,CACGD,KAAM,SACNC,IAAK,e,EAKdE,WAAa,SAACJ,GAAW,IACdH,EAAU,EAAKW,MAAfX,MAER,EAAKgB,SAAS,CACXhB,MAAOA,EAAMiC,QAAO,SAACC,EAAMC,GACxB,OAAOA,IAAMhC,Q,EAItBe,QAAU,SAACkB,GACR,EAAKpB,SAAS,CAAChB,MAAM,GAAD,mBAAM,EAAKW,MAAMX,OAAjB,CAAwBoC,O,uDAI5C,OACG,sBAAKC,UAAU,YAAf,UACG,yCACA,cAAC,EAAD,CAAOrC,MAAOmB,KAAKR,MAAMX,MAAOO,WAAYY,KAAKZ,aACjD,cAAC,EAAD,CAAMW,QAASC,KAAKD,UACpB,cAAC,EAAD,W,GAzCMoB,IAAMd,W,MCkCtBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b1d2b531.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\n\r\nconst TableHeader = () => {\r\n   return (\r\n      <thead>\r\n         <tr>\r\n            <th>Name</th>\r\n            <th>Job</th>\r\n         </tr>\r\n      </thead>\r\n   )\r\n}\r\n\r\nconst TableBody = (props) => {\r\n   const rows = props.dudes.map((row, index) => {\r\n      return (\r\n         <tr key={index}>\r\n            <td>{row.name}</td>\r\n            <td>{row.job}</td>\r\n            <td>\r\n               <button onClick={() => props.removeDude(index)}>Delete</button>\r\n            </td>\r\n         </tr>\r\n      )\r\n   })\r\n\r\n   return <tbody>{rows}</tbody>\r\n\r\n}\r\n\r\n// Components having their own states -> into classes. Other simple comopentnts (best practice)\r\n\r\nconst Table = (props) => {\r\n   const { dudes, removeDude } = props\r\n   return (\r\n      <table>\r\n         <TableHeader />\r\n         <TableBody dudes={dudes} removeDude={removeDude} />\r\n      </table>\r\n   )\r\n}\r\n\r\nexport default Table","import React, { Component } from 'react'\r\n\r\nclass Form extends Component {\r\n   initialState = {\r\n      name: '',\r\n      job: '',\r\n   }\r\n\r\n   state = this.initialState\r\n\r\n   handleChange = (event) => {\r\n      const { name, value } = event.target\r\n\r\n      this.setState({\r\n         [name]: value,\r\n      })\r\n   }\r\n\r\n   submitForm = () => {\r\n      this.props.addDude(this.state)\r\n      this.setState(this.initialState)\r\n   }\r\n\r\n   render() {\r\n      const { name, job } = this.state;\r\n\r\n      return (\r\n         <form>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n               type=\"text\"\r\n               name=\"name\"\r\n               id=\"name\"\r\n               value={name}\r\n               onChange={this.handleChange} />\r\n            <label htmlFor=\"job\">Job</label>\r\n            <input\r\n               type=\"text\"\r\n               name=\"job\"\r\n               id=\"job\"\r\n               value={job}\r\n               onChange={this.handleChange} />\r\n\r\n            <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\r\n\r\n         </form>\r\n      );\r\n   }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Form","import React, { Component } from 'react'\r\n\r\n\r\nclass ApiCallTest extends Component {\r\n   state = {\r\n      data: [],\r\n   }\r\n\r\n\r\n   // Code is invoked after the component is mounted/inserted into the DOM tree.\r\n   componentDidMount() {\r\n      const url =\r\n         'https://en.wikipedia.org/w/api.php?action=opensearch&search=Seona+Dancing&format=json&origin=*'\r\n\r\n      fetch(url)\r\n         .then((result) => result.json())\r\n         .then((result) => {\r\n            this.setState({\r\n               data: result,\r\n            })\r\n         })\r\n   }\r\n\r\n   render() {\r\n      const { data } = this.state\r\n\r\n      const result = data.map((entry, index) => {\r\n         return <li key={index}>{entry}</li>\r\n      })\r\n\r\n      //console.log(data);\r\n      return <ul>{result}</ul>\r\n   }\r\n}\r\n\r\n\r\n\r\nexport default ApiCallTest","import React, { Component } from 'react'\r\nimport Table from \"./components/Table\"\r\nimport Form from './components/Form'\r\nimport ApiCallTest from './components/ApiCallTest'\r\n\r\n\r\nclass App extends React.Component {\r\n   state = {\r\n      dudes: [\r\n         {\r\n            name: 'Charlie',\r\n            job: 'Janitor',\r\n         },\r\n         {\r\n            name: 'Mac',\r\n            job: 'Bouncer',\r\n         },\r\n         {\r\n            name: 'Dee',\r\n            job: 'Aspring actress',\r\n         },\r\n         {\r\n            name: 'Dennis',\r\n            job: 'Bartender',\r\n         },\r\n      ],\r\n   }\r\n\r\n   removeDude = (index) => {\r\n      const { dudes } = this.state\r\n\r\n      this.setState({\r\n         dudes: dudes.filter((dude, i) => {\r\n            return i !== index\r\n         }),\r\n      })\r\n   }\r\n   addDude = (newDude) => {\r\n      this.setState({dudes: [...this.state.dudes, newDude]})\r\n    }\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"container\">\r\n            <h1>Presons</h1>\r\n            <Table dudes={this.state.dudes} removeDude={this.removeDude} />\r\n            <Form addDude={this.addDude} />\r\n            <ApiCallTest />\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\n// ($env:BROWSER = \"firefox\") -and (npm start) \r\n\r\n\r\n// Deploy (Makes all source code into static files)\r\n// npm run build\r\n// Creates a folder called 'build' with your website\r\n\r\n\r\n/*\r\n// Optional: Make it deploy to github pages\r\n\r\n ---- FIRST TIME -----\r\npackage.json\r\n - Add at top: \r\n\"homepage\": \"https://taniarascia.github.io/react-tutorial\",\r\n\r\n- update scripts\r\n\"scripts\": {\r\n  // ... ,\r\n  \"predeploy\": \"npm run build\",\r\n  \"deploy\": \"gh-pages -d build\"\r\n}\r\n\r\nnpm install --save-dev gh-pages\r\n\r\n----------------------------\r\n\r\nThen you can do \r\n>npm run build\r\n>npm run deploy\r\n\r\n*/\r\n\r\n\r\n  ReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}